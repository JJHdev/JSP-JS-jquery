## 1.on을 이용한 JQuery 실행하기.
```
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style>
  .test   {border: 3px solid red; width: 300px; height: 100px; 
           text-align: center; line-height: 100px;}
  .active {font-size: 0.8em;}
	.inside {background-color: aqua;}
  .cli    {color :silver;} /* 클릭할경우 */



</style>
<script src="js/jquery-3.6.3.min.js"></script>

  <script> 
  /* $(selector).on(event,childSelector,data,function,map) */
  $(function(){
/* 	  $("div.test").click(function(){
	  		$(this).addClass("cli");
	  	 });
	  	 
	  	$("div.test").mouseenter(function(){
        $(this).addClass("inside");
       });
	  	
	  	$("div.test").mouseleave(function(){
        $(this).removeClass("inside");
       }); */
	  	
     /*위에와 아래는 같은 효과를 나타낼수 있다. (on) 같은 선택자를 사용시 여러 효과를 나타내줄수있다. */
	    $("div.test").on({
								    	click:function(){ $(this).addClass("cli").addClass("active");},
								    	mouseenter:function(){ $(this).addClass("inside");},
								    	mouseleave:function(){ $(this).removeClass("inside");}
							       });
  });
  </script>

</head>
<body>
   <div class="test">마우스진입, 마우스 빠져날때, 클릭시 </div>
  <h2>JQuery event</h2>
  <hr/>
  $(selector).on({
                  event:function(){},
                  event:function(){},
                  event:function(){}
                  });
  
</body>
</html>
```

## 2. 버블링 효과에 따른 mouseover,enter에 따른 차이점
- over은 자식객체까지 효과를 주어져 버블링효과가 발생한다.
- enter은 효과를 준 대상만(자식x) 부여한다.
```
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style>

body {
  width: 500px;
  margin: 30px auto;
}
.outer {
  width: 200px;
  height: 200px;
  background: Orange;
  padding: 50px;
  margin: 10px;
}

.inner {
  width: 100%;
  height: 100%;
  background: Pink;
}</style>
<!-- download방식으로 jquery 방식 연동 -->
<script src="js/jquery-3.6.3.min.js"></script>

	<script> 
	 $(function(){
		 $('.outer')
		  .mouseover(function(){
		    $('body').append('<p>마우스오버가 발생했습니다.</p>')
		  })
		  .mouseenter(function(){
		    $('body').append('<p>마우스엔터,마우스엔터</p>')
		  });
		 
	 });
	</script>
 <!-- CDN방식으로 JQuery연동 -->
<!-- <script src="https://code.jquery.com/jquery-2.2.4.js"></script> -->

</head>
<body>
	<h2></h2>
	<hr/>
	
	<div class="outer">
  <div class="inner"></div>
  </div>
</body>
</html>
```

### 2-1. 버블링 효과 막아주는 
1- event.preventDefault()
2- event.stopPropagation()
```
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="https://code.jquery.com/jquery-3.5.0.js"></script>
<style>
div,p,sapn,section{color:white;}
div {
    background-color: #cccccc;
    padding: 20px;
    display: block;
}

p {
    background-color: #aaa;
    padding: 20px;
    display: block;
}

span {
    background-color: #888;
    padding: 20px;
    display: block;
}

a {
    background-color: #888;
    padding: 20px;
    display: block;
}


section {
    background-color: #4477AA;
    padding: 0 10px 30px 20px;
    margin: 50px 0 0 0;
}

section:before {
    background-color: #114477;
    padding: 5px;
    margin: 0 0 0 -20px;
    border-bottom: 2px solid #002244;
    border-bottom-right-radius: 5px;
    font-size: 12px;
    font-weight: bold;
    color: white;
    content:"결과 콘솔";
}
</style>
<script>
$(function(){
  //DIV 영역에 클릭 이벤트 설정
  $("#div_").on("click",function(event){
      $("#console").append("<br>DIV 클릭");
  });

  //P 영역에 클릭 이벤트 설정
  $("#p_").on("click",function(event){
      $("#console").append("<br>P 클릭");
      //event.stopPropagation();//이벤트 전파를 차단 => 상위요소로 전달을 차단
  });

  //SPAN 영역에 클릭 이벤트 설정
  $("#span_").on("click",function(event){
      $("#console").append("<br>SPAN 클릭");
  });
  
  //a 영역에 클릭 이벤트 설정
  $("#a1_").on("click",function(event){
      $("#console").append("<br>a 클릭");
      event.preventDefault(); //a요소의 연결기본기능을 막는다 
  });
});
</script>
</head>
<body>
<div id="div_">
    DIV영역
    <p id="p_">
        P영역
        <a href="http://www.naver.com" target="_blank" id="a1_">a영역</a>
    </p>
</div>

<!-- <div id="div_">
    DIV영역
    <p id="p_">
        P영역
        <span id="span_">SPAN영역</span>
    </p>
</div> -->

<section id="console"><br></section>


<pre>
*이벤트 전파 : 이벤트가 발생된 자식요소부터 최상위요소까지 이벤트가 전달,전파된다
-여기에서는 
 span요소 click발생->부모 p요소 click발생->부모 div요소 click발생
 
*event.stopPropagation() : 이벤트 전파를 차단 => 상위요소로 전달을 차단
event.stopPropagation() Prevents the event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event

*event.preventDefault() : 기본동작을 차단
event.preventDefault()  Prevents the default action of the event
</pre>
</body>
</html>
```
